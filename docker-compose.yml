version: "3.8"

services:
  kafka:
    image: apache/kafka:3.7.2
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=3

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  redis:
    image: redis/redis-stack:6.2.6-v19
    container_name: redis
    environment:
      REDIS_ARGS: "--requirepass caremember"
    ports:
      - "6379:6379"
      - "8001:8001"

  transaction-service:
    build: .
    container_name: transaction-service
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - redis
    environment:
      - KAFKA_BROKER=kafka:9092
      - REDIS_URL=redis://:caremember@redis:6379
    command: ["node", "transaction-service.js"]

  fraud-detection-service:
    build: .
    container_name: fraud-detection-service
    depends_on:
      - kafka
      - redis
    environment:
      - KAFKA_BROKER=kafka:9092
      - REDIS_URL=redis://:caremember@redis:6379
    command: ["node", "fraud-detection-service.js"]

  alert-service:
    build: .
    container_name: alert-service
    depends_on:
      - kafka
      - redis
    environment:
      - KAFKA_BROKER=kafka:9092
      - REDIS_URL=redis://:caremember@redis:6379
    command: ["node", "alert-service.js"]
